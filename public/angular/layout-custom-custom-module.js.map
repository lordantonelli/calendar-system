{"version":3,"sources":["webpack:///./src/app/+layout/custom/custom-routing.module.ts","webpack:///./src/app/+layout/custom/custom.component.css","webpack:///./src/app/+layout/custom/custom.component.html","webpack:///./src/app/+layout/custom/custom.component.ts","webpack:///./src/app/+layout/custom/custom.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEF;AAErD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B,CAAC,CAAC;AAMH;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;ACdhC,+DAA+D,uJ;;;;;;;;;;;ACA/D,wiBAAwiB,oBAAoB,sBAAsB,eAAe,gBAAgB,qBAAqB,qBAAqB,wEAAwE,qDAAqD,mCAAmC,wEAAwE,MAAM,uBAAuB,4EAA4E,oCAAoC,YAAY,EAAE,KAAK,GAAG,mHAAmH,6DAA6D,QAAQ,iBAAiB,IAAI,kBAAkB,MAAM,iBAAiB,MAAM,8BAA8B,QAAQ,qBAAqB,iBAAiB,sBAAsB,MAAM,eAAe,kHAAkH,+FAA+F,sCAAsC,UAAU,qC;;;;;;;;;;;;;;;;;;;;;;;ACAjmD;AAExB;AAMjC;IAAA;IAOA,CAAC;IANC;;OAEG;IACH,yCAAe,GAAf;QACE,oDAAkB,EAAE,CAAC;IACvB,CAAC;IANU,eAAe;QAJ3B,+DAAS,CAAC;YACT,8GAAsC;;SAEvC,CAAC;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACM;AACA;AAEe;AACT;AAEP;AAW9C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QATxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY;gBACZ,0EAAmB;gBACnB,2DAAS;aACV;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ","file":"layout-custom-custom-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomComponent } from './custom.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: CustomComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLytsYXlvdXQvY3VzdG9tL2N1c3RvbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mk-box header=\\\"About custom layout\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\n  <p>You can completely disable layout components to create custom page layout like <a routerLink=\\\"/login\\\">Login</a> and <a routerLink=\\\"/register\\\">Register</a> pages.</p>\\n</mk-box>\\n\\n<mk-box header=\\\"Configuration\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\n  <p>First you will need to import LayoutService and subscribe to isCustomLayout in the main app component:</p>\\n  <pre><code class=\\\"language-typescript\\\">import &#123; Component, OnInit } from '@angular/core';\\nimport &#123; LayoutService } from '../../../src';\\n\\n@Component(&#123;\\n  selector: 'app-root',\\n  templateUrl: './app.component.html'\\n&#125;)\\nexport class AppComponent implements OnInit &#123;\\n  public isCustomLayout: boolean;\\n\\n  constructor(\\n    private layoutService: LayoutService\\n  ) &#123;&#125;\\n\\n  ngOnInit() &#123;\\n    this.layoutService.isCustomLayout.subscribe((value: boolean) => &#123;\\n      this.isCustomLayout = value;\\n    &#125;);\\n  }\\n}</code></pre>\\n\\n  <br/>\\n  <p>Wrap the main component html like so:</p>\\n  <pre><code class=\\\"language-html\\\">&lt;ng-container *ngIf=\\\"isCustomLayout else noCustomLayout\\\"&gt;\\n  &lt;router-outlet&gt;&lt;/router-outlet&gt;\\n&lt;/ng-container&gt;\\n&lt;ng-template #layoutEnabled&gt;\\n  &lt;mk-layout-wrapper&gt;\\n    ...\\n  &lt;/mk-layout-wrapper&gt;\\n&lt;ng-template&gt;</code></pre>\\n\\n<br/>\\n<p>Configure the router:</p>\\n<pre><code class=\\\"language-typescript\\\">\\n  ...\\n  , &#123;\\n    path: 'login',\\n    loadChildren: 'app/login/login.module#LoginModule',\\n    data: &#123;\\n      customLayout: true\\n    &#125;\\n  &#125;,\\n  ...\\n</code></pre>\\n</mk-box>\\n\"","import { Component, AfterViewInit } from '@angular/core';\n\nimport * as Prism from 'prismjs';\n\n@Component({\n  templateUrl: './custom.component.html',\n  styleUrls: ['./custom.component.css']\n})\nexport class CustomComponent implements AfterViewInit {\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    Prism.highlightAll();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { CustomRoutingModule } from './custom-routing.module';\nimport { CustomComponent } from './custom.component';\n\nimport { BoxModule } from 'angular-admin-lte';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CustomRoutingModule,\n    BoxModule\n  ],\n  declarations: [CustomComponent]\n})\nexport class CustomModule { }\n"],"sourceRoot":""}